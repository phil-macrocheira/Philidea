<!DOCTYPE html>
<html lang="en">
@model Philidea.Website.Pages.totk_calculatorModel
@Html.AntiForgeryToken()
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <meta name="description" content="A damage calculator for The Legend of Zelda: Tears of the Kingdom. Select your equipment and a target enemy to view the damage that would be dealt by the attack.">
    <link rel="canonical" href="https://philidea.com/totk-calculator" />

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/totk-dc/css/totk-dc.css" asp-append-version="true" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
</head>

<body>
    <!--HEADER-->
    <header class="bg-black border-bottom box-shadow mb-3">
        <div class="container" style="display:flex; justify-content:space-between;">
            <label class="totk-title" style="color:white; font-size: 28px; padding:10px;">@ViewData["HeaderTitle"]</label>
            <div style="display:flex; flex-direction:column; align-items:flex-end;">
                <label style="font-size:10px; margin-top:2px; margin-right:4px;">@ViewData["Version"]</label>
                <img src="/totk-dc/ui-icons/settings_icon.svg" class="settings-icon" onclick="openSettings()" alt="Settings Icon" />
            </div>
        </div>
    </header>

    <!--Settings-->
    <div id="settingsModalBackground" class="modal-background">
        <div id="settingsModal" class="modal">
            <div style="background:none; border:none;">
                <span class="modal-close" onclick="closeSettings()">&times;</span>
                <div style="margin-top:25px;">
                    <h2 style="background:none;margin-left:-20px;">Settings</h2>
                    <!--Settings Checkboxes-->
                    <div>
                        <label class="setting-label"><input asp-for="Input.FreeMode" id="checkboxFreeMode" class="form-check-input setting-box cookie" type="checkbox" onchange="update()">Unrestricted Inputs</label>
                        <br><label class="setting-label"><input asp-for="Input.TrueDamage" id="checkboxTrueDamage" class="form-check-input setting-box cookie" type="checkbox" onchange="update()">Weapon Icon True Damage</label>
                        <br><label class="setting-label"><input asp-for="Input.SortFuseByAttack" id="checkboxSortFuseByAttack" class="form-check-input setting-box cookie" type="checkbox" onchange="updateFuseDropdown()">Sort Fuse By Attack Power</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openSettings() {
            document.getElementById('settingsModalBackground').style.display = 'flex';
            var modal = document.getElementById('settingsModal');

            if (modal.style.display === 'block') {
                closeSettings();
            }
            else {
                modal.style.display = 'block';
            }
        }
        function closeSettings() {
            document.getElementById('settingsModalBackground').style.display = 'none';
            document.getElementById('settingsModal').style.display = 'none';
        }
        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + value + expires + "; path=/";
        }
        function getCookie(name) {
            var nameEQ = name + "=";
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i];
                while (cookie.charAt(0) === ' ') {
                    cookie = cookie.substring(1, cookie.length);
                }
                if (cookie.indexOf(nameEQ) === 0) {
                    return cookie.substring(nameEQ.length, cookie.length);
                }
            }
            return null;
        }
        function initializeSettings() {
            var freeModeCookie = getCookie("FreeMode");
            if (freeModeCookie !== null) {
                document.getElementById("checkboxFreeMode").checked = (freeModeCookie === "true");
            }

            var trueDamageCookie = getCookie("TrueDamage");
            if (trueDamageCookie !== null) {
                document.getElementById("checkboxTrueDamage").checked = (trueDamageCookie === "true");
            }
            var sortFuseByAttackCookie = getCookie("SortFuseByAttack");
            if (sortFuseByAttackCookie !== null) {
                document.getElementById("checkboxSortFuseByAttack").checked = (sortFuseByAttackCookie === "true");
                updateFuseDropdown();
            }
        }
        window.onload = function () {
            initializeSettings();
        };
        function handleCheckboxChange(checkboxId, cookieName) {
            var checkbox = document.getElementById(checkboxId);
            setCookie(cookieName, checkbox.checked, 400);
        }
        document.getElementById("checkboxFreeMode").addEventListener("change", function () {
            handleCheckboxChange("checkboxFreeMode", "FreeMode");
        });
        document.getElementById("checkboxTrueDamage").addEventListener("change", function () {
            handleCheckboxChange("checkboxTrueDamage", "TrueDamage");
        });
        document.getElementById("checkboxSortFuseByAttack").addEventListener("change", function () {
            handleCheckboxChange("checkboxSortFuseByAttack", "SortFuseByAttack");
        });
    </script>

    <!--BODY-->
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!--FOOTER-->
    <footer class="bg-black border-top footer text-muted">
        <div class="container">
            <style>
                ul.horizontal-list {
                    list-style-type: none;
                    padding: 0;
                    margin: 0;
                }

                    ul.horizontal-list li {
                        display: inline-block;
                        margin-right: 30px;
                    }

                    ul.horizontal-list a {
                        color: #5be2d4;
                        text-decoration: none;
                    }
            </style>

            <ul class="horizontal-list">
                <li><a href="https://docs.google.com/forms/d/e/1FAIpQLSdWgQW8VGALbCsqE25iIV-nFlz37l-pYmLtYqz4dm_N9TTzAQ/viewform" target="_blank">Submit Feedback</a></li>
                <li><a href="https://github.com/phil-macrocheira/Philidea" target="_blank">Github</a></li>
                <li><a href="https://docs.google.com/spreadsheets/d/1LGihwXFrp6FxqSsbrUVIHcw8Nis6Qr3nedVdVpWbpls" target="_blank">Data</a></li>
                <li><a href="https://docs.google.com/document/d/1K5hLcxfnvSnY-nsIP-n8Ew7rm9EkqHtnn6iJqOnxlng" target="_blank">Damage Doc</a></li>
                <li><a href="https://discord.gg/k4s5KY7ASj" target="_blank">Datamining Discord</a></li>
            </ul>
        </div>
    </footer>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>